Системные вызовы(при запуске и обработке отдельного запроса):

recvfrom  - получить сообщение из сокета независимо от того, является ли сокет ориентированным на соединения или нет.
read чтение данных файлового дескриптора
sendto отправляет сообщения в сокет
accept - принять соединение на сокете  
close закрытие файлового дескриптора
clone - - создать процесс-потомок 
write производит запись в файловый дескриптор
open открытие и ,возможно, создание файла
brk УСТАНАЛИВАЕТ ОКОНЧАНИЕ СЕГМЕНТА ПАМЯТИ, ВЫДЕЛЕННОГО ПОД ПРОЦЕССА, при помощи addr, когда это значение рационально, система имеет достаточно памяти и процесс не вышел за максмиально разрешенный ему объем памяти.
stat - выводит содержимое полей дескриптора файла или статус файловой системы  
wait4 приостанавливает исполнение текущего процесса до того, как свою работу завершит дочерний процесс с номером pid, или этот процесс не получит сигнал, прекращающий его работу, или не будет произведен вызов обработчика прерывания. Если дочерний процесс pid уже прекратил свою работу на момент вызова этой функции (такой процесс называется "зомби"), то функция немедленно возвращается
munmap = mmap, только убирает отражение
pipe- создает канал  
mmap отражает файл в память
fstat получение статуса файла
mprotect контролирование права доступа к области памяти
access- проверяет доступ пользователя к файлам
socket- создает конечную точку соединения  и возвращает ее описатель
bind  привязывает к сокету sockfd локальный адрес my_addr длиной addrlen. 
listen  слушать соединения на сокете
execve - выполнить программу  
dup - создать дубликат файлового дескриптора  
fcntl - манипуляции с файловым дескриптором 
arch_prctl - установить состояние треда, специфичное для архитектуры  

Системные вызовы, которые выполняются при обработке отдельного запроса:
read; write ;open ;close; fstat ;mmap; mprotect ;munmap; brk ;access;  dup;  socket; bind ; execve ; fcntl  ;arch_prctl
